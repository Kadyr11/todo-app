version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: todo_database_dev
    environment:
      POSTGRES_DB: todoapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - todo_network_dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d todoapp"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Backend API (Development)
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: todo_api_dev
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://postgres:password@database:5432/todoapp
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3001:3001"
      - "9229:9229"  # Debug port
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - todo_network_dev
    volumes:
      - ./api:/app
      - /app/node_modules
      - /app/dist
    restart: unless-stopped

  # Frontend Web App (Development)
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: todo_web_dev
    environment:
      # When running inside Docker the frontend must talk to the API by service
      # hostname `api`. Point VITE_API_URL to the internal address so Vite's
      # proxy doesn't forward to localhost (which is the web container itself).
      VITE_API_URL: http://api:3001
      VITE_API_TARGET: http://api:3001
      VITE_HMR_PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - todo_network_dev
    volumes:
      - ./web:/app
      - /app/node_modules
      - /app/dist
    restart: unless-stopped

volumes:
  postgres_data_dev:
    driver: local

networks:
  todo_network_dev:
    driver: bridge