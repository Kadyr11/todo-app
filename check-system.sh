#!/bin/bash

# Todo App - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã

echo "üîç Todo App - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã"
echo "========================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏
check_requirement() {
    local name="$1"
    local command="$2"
    local min_version="$3"
    
    echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ $name... "
    
    if command -v "$command" &> /dev/null; then
        local version=$(eval "$command --version 2>/dev/null | head -n1")
        echo -e "${GREEN}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        echo "   –í–µ—Ä—Å–∏—è: $version"
        return 0
    else
        echo -e "${RED}‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω${NC}"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
echo -e "\nüñ•Ô∏è  –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:"
echo "   $(uname -s) $(uname -r)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
echo -e "\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π:"

check_requirement "Node.js" "node" "18"
NODE_OK=$?

check_requirement "npm" "npm" "8"
NPM_OK=$?

check_requirement "Docker" "docker" "20"
DOCKER_OK=$?

echo -e "\nüê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker —Å–æ—Å—Ç–æ—è–Ω–∏—è:"
if command -v docker &> /dev/null; then
    if docker info &> /dev/null; then
        echo -e "   ${GREEN}‚úÖ Docker –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
        DOCKER_RUNNING=0
    else
        echo -e "   ${YELLOW}‚ö†Ô∏è  Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
        echo "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop"
        DOCKER_RUNNING=1
    fi
else
    echo -e "   ${RED}‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    DOCKER_RUNNING=1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
echo -e "\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞:"

PROJECT_STRUCTURE=0

if [ -f "package.json" ]; then
    echo -e "   ${GREEN}‚úÖ package.json${NC}"
else
    echo -e "   ${RED}‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    PROJECT_STRUCTURE=1
fi

if [ -d "backend" ] && [ -f "backend/package.json" ]; then
    echo -e "   ${GREEN}‚úÖ backend/package.json${NC}"
else
    echo -e "   ${RED}‚ùå backend/package.json –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    PROJECT_STRUCTURE=1
fi

if [ -d "frontend" ] && [ -f "frontend/package.json" ]; then
    echo -e "   ${GREEN}‚úÖ frontend/package.json${NC}"
else
    echo -e "   ${RED}‚ùå frontend/package.json –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    PROJECT_STRUCTURE=1
fi

if [ -f "docker-compose.yml" ]; then
    echo -e "   ${GREEN}‚úÖ docker-compose.yml${NC}"
else
    echo -e "   ${RED}‚ùå docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    PROJECT_STRUCTURE=1
fi

if [ -f "docker-compose.dev.yml" ]; then
    echo -e "   ${GREEN}‚úÖ docker-compose.dev.yml${NC}"
else
    echo -e "   ${RED}‚ùå docker-compose.dev.yml –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    PROJECT_STRUCTURE=1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞
echo -e "\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞:"

if [ -d "backend/node_modules" ]; then
    echo -e "   ${GREEN}‚úÖ Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
    BACKEND_DEPS=0
else
    echo -e "   ${YELLOW}‚ö†Ô∏è  Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
    echo "   –í—ã–ø–æ–ª–Ω–∏—Ç–µ: cd backend && npm install"
    BACKEND_DEPS=1
fi

if [ -d "frontend/node_modules" ]; then
    echo -e "   ${GREEN}‚úÖ Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
    FRONTEND_DEPS=0
else
    echo -e "   ${YELLOW}‚ö†Ô∏è  Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
    echo "   –í—ã–ø–æ–ª–Ω–∏—Ç–µ: cd frontend && npm install"
    FRONTEND_DEPS=1
fi

# –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
echo -e "\nüìä –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏:"

TOTAL_SCORE=0
MAX_SCORE=7

if [ $NODE_OK -eq 0 ]; then ((TOTAL_SCORE++)); fi
if [ $NPM_OK -eq 0 ]; then ((TOTAL_SCORE++)); fi
if [ $DOCKER_OK -eq 0 ]; then ((TOTAL_SCORE++)); fi
if [ $DOCKER_RUNNING -eq 0 ]; then ((TOTAL_SCORE++)); fi
if [ $PROJECT_STRUCTURE -eq 0 ]; then ((TOTAL_SCORE++)); fi
if [ $BACKEND_DEPS -eq 0 ]; then ((TOTAL_SCORE++)); fi
if [ $FRONTEND_DEPS -eq 0 ]; then ((TOTAL_SCORE++)); fi

echo "   –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: $TOTAL_SCORE/$MAX_SCORE"

if [ $TOTAL_SCORE -eq $MAX_SCORE ]; then
    echo -e "   ${GREEN}üéâ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É!${NC}"
    echo -e "\nüöÄ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞:"
    echo "   Production:  docker compose up --build"
    echo "   Development: docker compose -f docker-compose.dev.yml up --build"
    echo "   –õ–æ–∫–∞–ª—å–Ω–æ:    npm run dev (–≤ –ø–∞–ø–∫–∞—Ö backend –∏ frontend)"
elif [ $TOTAL_SCORE -ge 5 ]; then
    echo -e "   ${YELLOW}‚ö†Ô∏è  –°–∏—Å—Ç–µ–º–∞ –ø–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–∞, —É—Å—Ç—Ä–∞–Ω–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã${NC}"
else
    echo -e "   ${RED}‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞, —Ç—Ä–µ–±—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π${NC}"
    echo -e "\nüîß –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "   ./install-macos.sh"
fi

echo -e "\nüìñ –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –≤ —Ñ–∞–π–ª–∞—Ö:"
echo "   README.md - –û—Å–Ω–æ–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
echo "   SETUP.md  - –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ"