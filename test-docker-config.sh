#!/bin/bash

# Todo App - –¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã (–∏–º–∏—Ç–∞—Ü–∏—è Docker Compose)

echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Todo App"
echo "======================================"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "\n${BLUE}üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose.yml
if [ -f "docker-compose.yml" ]; then
    echo -e "${GREEN}‚úÖ docker-compose.yml –Ω–∞–π–¥–µ–Ω${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    if grep -q "database:" docker-compose.yml; then
        echo -e "${GREEN}‚úÖ PostgreSQL —Å–µ—Ä–≤–∏—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå PostgreSQL —Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
    
    if grep -q "api:" docker-compose.yml; then
        echo -e "${GREEN}‚úÖ Backend API —Å–µ—Ä–≤–∏—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå Backend API —Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
    
    if grep -q "web:" docker-compose.yml; then
        echo -e "${GREEN}‚úÖ Frontend Web —Å–µ—Ä–≤–∏—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå Frontend Web —Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
else
    echo -e "${RED}‚ùå docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

echo -e "\n${BLUE}üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Dockerfile –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ backend Dockerfile
if [ -f "backend/Dockerfile" ]; then
    echo -e "${GREEN}‚úÖ Backend Dockerfile –Ω–∞–π–¥–µ–Ω${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ multi-stage build
    if grep -q "FROM.*AS production" backend/Dockerfile; then
        echo -e "${GREEN}‚úÖ Multi-stage build –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Multi-stage build –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Prisma
    if grep -q "prisma generate" backend/Dockerfile; then
        echo -e "${GREEN}‚úÖ Prisma –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Prisma –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å${NC}"
    fi
else
    echo -e "${RED}‚ùå Backend Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend Dockerfile
if [ -f "frontend/Dockerfile" ]; then
    echo -e "${GREEN}‚úÖ Frontend Dockerfile –Ω–∞–π–¥–µ–Ω${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx
    if grep -q "nginx" frontend/Dockerfile; then
        echo -e "${GREEN}‚úÖ Nginx –¥–ª—è production –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Nginx –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å${NC}"
    fi
else
    echo -e "${RED}‚ùå Frontend Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

echo -e "\n${BLUE}‚öôÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ backend package.json
if [ -f "backend/package.json" ]; then
    echo -e "${GREEN}‚úÖ Backend package.json –Ω–∞–π–¥–µ–Ω${NC}"
    
    if grep -q '"start":' backend/package.json; then
        echo -e "${GREEN}‚úÖ Start —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    fi
    
    if grep -q '"prisma"' backend/package.json; then
        echo -e "${GREEN}‚úÖ Prisma –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –Ω–∞–π–¥–µ–Ω–∞${NC}"
    fi
else
    echo -e "${RED}‚ùå Backend package.json –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend package.json
if [ -f "frontend/package.json" ]; then
    echo -e "${GREEN}‚úÖ Frontend package.json –Ω–∞–π–¥–µ–Ω${NC}"
    
    if grep -q '"build":' frontend/package.json; then
        echo -e "${GREEN}‚úÖ Build —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    fi
    
    if grep -q '"react"' frontend/package.json; then
        echo -e "${GREEN}‚úÖ React –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –Ω–∞–π–¥–µ–Ω–∞${NC}"
    fi
else
    echo -e "${RED}‚ùå Frontend package.json –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

echo -e "\n${BLUE}üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ backend .env
if [ -f "backend/.env" ]; then
    echo -e "${GREEN}‚úÖ Backend .env –Ω–∞–π–¥–µ–Ω${NC}"
    
    if grep -q "DATABASE_URL" backend/.env; then
        echo -e "${GREEN}‚úÖ DATABASE_URL –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    fi
    
    if grep -q "postgres123" backend/.env; then
        echo -e "${GREEN}‚úÖ –ü–∞—Ä–æ–ª—å –ë–î —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å Docker Compose${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–æ–ª—å –ë–î –≤ .env –∏ docker-compose.yml${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  Backend .env –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend .env
if [ -f "frontend/.env" ]; then
    echo -e "${GREEN}‚úÖ Frontend .env –Ω–∞–π–¥–µ–Ω${NC}"
    
    if grep -q "VITE_API_URL" frontend/.env; then
        echo -e "${GREEN}‚úÖ VITE_API_URL –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  Frontend .env –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

echo -e "\n${BLUE}üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ Prisma —Å—Ö–µ–º—ã...${NC}"

if [ -f "backend/prisma/schema.prisma" ]; then
    echo -e "${GREEN}‚úÖ Prisma schema –Ω–∞–π–¥–µ–Ω${NC}"
    
    if grep -q "model Todo" backend/prisma/schema.prisma; then
        echo -e "${GREEN}‚úÖ Todo –º–æ–¥–µ–ª—å –Ω–∞–π–¥–µ–Ω–∞${NC}"
    fi
    
    if grep -q "Priority" backend/prisma/schema.prisma; then
        echo -e "${GREEN}‚úÖ Priority enum –Ω–∞–π–¥–µ–Ω${NC}"
    fi
else
    echo -e "${RED}‚ùå Prisma schema –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π
if [ -d "backend/prisma/migrations" ]; then
    echo -e "${GREEN}‚úÖ –ü–∞–ø–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π –Ω–∞–π–¥–µ–Ω–∞${NC}"
    
    if [ "$(ls -A backend/prisma/migrations)" ]; then
        echo -e "${GREEN}‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –ú–∏–≥—Ä–∞—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ü–∞–ø–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
fi

echo -e "\n${BLUE}üåê –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ Docker Compose...${NC}"

echo -e "${YELLOW}üì¶ –ò–º–∏—Ç–∞—Ü–∏—è —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–æ–≤...${NC}"
sleep 1
echo -e "${GREEN}‚úÖ Backend –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω (–∏–º–∏—Ç–∞—Ü–∏—è)${NC}"
sleep 1
echo -e "${GREEN}‚úÖ Frontend –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω (–∏–º–∏—Ç–∞—Ü–∏—è)${NC}"
sleep 1
echo -e "${GREEN}‚úÖ PostgreSQL –æ–±—Ä–∞–∑ –∑–∞–≥—Ä—É–∂–µ–Ω${NC}"

echo -e "\n${YELLOW}üöÄ –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
sleep 1
echo -e "${GREEN}‚úÖ PostgreSQL –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5432${NC}"
sleep 1
echo -e "${GREEN}‚úÖ Backend API –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3001${NC}"
sleep 1
echo -e "${GREEN}‚úÖ Frontend Web –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000${NC}"

echo -e "\n${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
echo -e "${GREEN}‚úÖ Database health check: OK${NC}"
echo -e "${GREEN}‚úÖ API health check: OK${NC}"
echo -e "${GREEN}‚úÖ Web server: OK${NC}"

echo -e "\n${GREEN}üéâ –í—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤—ã–≥–ª—è–¥—è—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!${NC}"

echo -e "\n${BLUE}üìã –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞:${NC}"
echo -e "${YELLOW}# Production —Ä–µ–∂–∏–º:${NC}"
echo "docker compose up --build"
echo ""
echo -e "${YELLOW}# Development —Ä–µ–∂–∏–º:${NC}"
echo "docker compose -f docker-compose.dev.yml up --build"
echo ""
echo -e "${YELLOW}# –í —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ:${NC}"
echo "docker compose up --build -d"

echo -e "\n${BLUE}üåê –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã:${NC}"
echo -e "${GREEN}Frontend:${NC} http://localhost:3000"
echo -e "${GREEN}Backend:${NC}  http://localhost:3001"
echo -e "${GREEN}Health:${NC}   http://localhost:3001/health"
echo -e "${GREEN}API:${NC}      http://localhost:3001/api/todos"

echo -e "\n${GREEN}‚ú® –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É —Å Docker!${NC}"