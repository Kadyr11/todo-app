#!/bin/bash

# Todo App - –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è macOS

echo "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Todo App –¥–ª—è macOS"
echo "================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ macOS
if [[ "$OSTYPE" != "darwin"* ]]; then
    echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è macOS"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã
check_command() {
    if command -v "$1" &> /dev/null; then
        echo "‚úÖ $1 —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 0
    else
        echo "‚ùå $1 –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Homebrew
echo -e "\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Homebrew..."
if ! check_command brew; then
    echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ Homebrew –≤ PATH –¥–ª—è Apple Silicon Macs
    if [[ -f "/opt/homebrew/bin/brew" ]]; then
        echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
        eval "$(/opt/homebrew/bin/brew shellenv)"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
echo -e "\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js..."
if ! check_command node; then
    echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js..."
    brew install node
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ npm
echo -e "\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ npm..."
check_command npm

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
echo -e "\nüê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
if ! check_command docker; then
    echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
    brew install --cask docker
    echo "‚ö†Ô∏è  –í–ê–ñ–ù–û: –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker:"
    echo "   1. –ù–∞–π–¥–∏—Ç–µ Docker –≤ Applications –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ"
    echo "   2. –î–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ (–∑–Ω–∞—á–æ–∫ –≤ menu bar)"
    echo "   3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª"
fi

# –í–µ—Ä—Å–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
echo -e "\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π..."
echo "Node.js: $(node --version 2>/dev/null || echo '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')"
echo "npm: $(npm --version 2>/dev/null || echo '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')"
echo "Docker: $(docker --version 2>/dev/null || echo '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω')"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞
echo -e "\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞..."

if [ -d "backend" ]; then
    echo "üîß Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    cd backend && npm install && cd ..
    echo "‚úÖ Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    echo "‚ùå –ü–∞–ø–∫–∞ backend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

if [ -d "frontend" ]; then
    echo "üîß Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    cd frontend && npm install && cd ..
    echo "‚úÖ Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    echo "‚ùå –ü–∞–ø–∫–∞ frontend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

echo -e "\nüéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo -e "\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ï—Å–ª–∏ Docker —É—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –≤–ø–µ—Ä–≤—ã–µ - –∑–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop"
echo "2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª"
echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:"
echo "   docker compose up --build"
echo ""
echo "üåê –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞:"
echo "   Frontend: http://localhost:3000"
echo "   Backend:  http://localhost:3001"